<?xml version="1.0" encoding="UTF-8"?>
<fortpy mode="docstring">
  <globals>
    <defaults folder="./tests" />
    <assignment name="seed_" value="randseed">
      <value identifier="randseed" file="seed.in.{}" rename="seed.in" />
    </assignment>
    <assignment name="eta" constant="1e-8" />
    <assignment name="js" constant="0" allocate="size(full_pi, 2)" />
    <assignment name="error_bars" constant="0"
		allocate="size(full_pi,2)" />
    <value identifier="seed.in" file="seed.in.01" rename="seed.in" />
  </globals>
  
  <decorates name="bcs.choose_n_random_sets">
    <group purpose="testing">
      <test description="Test hypersphere projection."
	    cases="01" assignments="seed_"
	    ignores="outpi_, y_, outy_">
	<output identifier="selected.out" file="selected.out.{}" />
	<target name="selected" />
	<assignment name="nrandsets" constant="20" />
      </test>
      <test identifier="driver" description="Standalone executable."
	    timed="true" cases="01" execute="false">
	<target name="outpi_" varfile="outpi.in" />
	<target name="outy_" varfile="outy.in" />
	<assignment name="nrandsets" constant="75" />
	<assignment name="outpi_" constant="0" allocate="nrandsets, size(full_pi, 2)" />
	<assignment name="y_">
	  <value file="y.in.{}" rename="y.in" />
	</assignment>
	<assignment name="outy_" constant="0" allocate="nrandsets" />
      </test>
      
      <assignment name="full_pi">
	<value file="full_pi.in.{}" rename="full_pi.in" />
      </assignment>
    </group>
  </decorates>
  <decorates name="bcs.gram_schmidt">
    <group purpose="testing">
      <test cases="01,02">
	<output identifier="orthogonal.out" file="orthogonal.out.{}" />
	<target name="Q" />
      </test>
      <assignment name="A"> 
	<value file="rand_matrix.in.{}" rename="rand_matrix.in" />
      </assignment>
      <assignment name="Q" constant="0" allocate="size(A, 1), size(A, 2)" />
    </group>
  </decorates>
  <decorates name="bcs.orthogonalize_to_set_list">
    <group purpose="testing">
      <test cases="5x8,30x40">
	<output identifier="orthogonal.out" file="orthog_vector.out.{}" />
	<target name="randvec" varfile="randvec.out" />
      </test>
      <assignment name="veclist">
	<value file="vector_list.in.{}" rename="vector_list.in" />
      </assignment>
      <assignment name="randvec">
	<value file="rand_vector.in.{}" rename="rand_vector.in" />
      </assignment>
    </group>
  </decorates>
  <decorates name="bcs.get_sigma2">
    <group purpose="testing">
      <test cases="01,02">
	<output identifier="sigma2.out" file="sigma2.out.{}" />
	<target name="[default]" varfile="sigma2.out" />
      </test>
      <assignment name="y">
	<value file="rand_y.in.{}" rename="rand_y.in" />
      </assignment>
      <assignment name="nfit" constant="size(y, 1)" />
    </group>
  </decorates>
  <decorates name="bcs.do_normal">
    <group purpose="testing">
      <test cases="01,02" assignments="eta; js; error_bars">
 	<output identifier="js.out" file="js_normal.out.{}" />
	<output identifier="ebars.out" file="ebars_normal.out.{}" />
	<target name="js" compareto="js.out" varfile="js.out" />
	<target name="error_bars" compareto="ebars.out" varfile="ebars.out" />
      </test>
      <assignment name="full_pi">
	<value file="classpoly_pi.in.{}" rename="classpoly_pi.in" />
      </assignment>
      <assignment name="y">
	<value file="classpoly_y.in.{}" rename="classpoly_y.in" />
      </assignment>
      <assignment name="sigma2">
	<value file="classpoly_sig2.in.{}" rename="classpoly_sig2.in" />
      </assignment>
    </group>
  </decorates>
  <decorates name="bcs.do_reweighted">
    <group purpose="testing">
      <test cases="b1" ignores="hold_pi, hold_y"
	    assignments="eta; js; error_bars">
 	<output identifier="js.out" file="js_reweight.out.{}" />
	<output identifier="ebars.out" file="ebars_reweight.out.{}" />
	<target name="js" compareto="js.out" varfile="js.out" />
	<target name="error_bars" compareto="ebars.out"
		varfile="ebars.out" />
      </test>
      <assignment name="full_pi">
	<value file="bcs_pi.in.{}" rename="pi.in" />
      </assignment>
      <assignment name="y">
	<value file="bcs_y.in.{}" rename="y.in" />
      </assignment>
      <assignment name="sigma2" constant="-1" />
      <assignment name="jcutoff" constant="1e-6" />
      <assignment name="penaltyfxn" constant="'arctan'" />
    </group>
  </decorates>
  <decorates name="bcs.predict">
    <group purpose="testing">
      <test cases="01,02">
 	<output identifier="prediction.out" file="part_y.out.{}" />
	<target name="prediction" varfile="prediction.out" />
      </test>
      <assignment name="pi">
	<value file="part_pi.in.{}" rename="part_pi.in" />
      </assignment>
      <assignment name="js">
	<value file="js_normal.out.02" rename="js.in" />
      </assignment>
    </group>
  </decorates>
  <decorates name="bcs.validate">
    <group purpose="testing">
      <test cases="01,02">
 	<output identifier="prediction.out" file="part_y.out.{}" />
	<output identifier="rms.out" file="valid_rms.out.{}" />
	<output identifier="err.out" file="valid_err.out.{}" />
	<target name="prediction" compareto="prediction.out" varfile="prediction.out" />
	<target name="pred_err" compareto="err.out" varfile="pred_err.out" />
	<target name="pred_rms" compareto="rms.out" varfile="pred_rms.out" />
      </test>
      <assignment name="pi"> 
	<value file="part_pi.in.{}" rename="part_pi.in" />
      </assignment>
      <assignment name="js">
	<value file="js_normal.out.02" rename="js.in" />
      </assignment>
      <assignment name="y">
	<value file="valid_y.in.{}" rename="y.in" />
      </assignment>
    </group>
  </decorates>
  <decorates name="bcs.partition_holdout_set">
    <group purpose="testing">
      <test cases="01,02" assignments="seed_">
 	<output identifier="fitlist.out" file="fitlist.out.{}" />
	<output identifier="holdlist.out" file="holdlist.out.{}" />
	<target name="fitlist" compareto="fitlist.out" varfile="fitlist.out" />
	<target name="holdlist" compareto="holdlist.out" varfile="holdlist.out" />
      </test>
      <assignment name="nfits" constant="15" />
      <assignment name="nsets" constant="55" />
      <assignment name="nholdout" constant="10" />
      <assignment name="fitlist" constant="0" allocate="nfits, nsets-nholdout" />
      <assignment name="holdlist" constant="0" allocate="nfits, nholdout" />
    </group>
  </decorates>
  <decorates name="bcs.do_bcs">
    <group purpose="testing" ignores="sigma2_, eta_">
      <test identifier="arctan" cases="b1" ignores="hold_rms_, hold_err_">
	<assignment name="penaltyfxn_" constant="'arctan'" />
	<assignment name="reweight_" constant=".true." />
	<auto names="js, ebars, rms, err">
	  <output identifier="$.out" file="bcs_reweight_$.out.arctan.{}" />  
	</auto>
	<assignment name="seed" value="global:seed.in" />
      </test>
      <test identifier="logsum" cases="b1" ignores="hold_rms_, hold_err_">
	<assignment name="penaltyfxn_" constant="'logsum'" />
	<assignment name="reweight_" constant=".true." />
	<auto names="js, ebars, rms, err">
	  <output identifier="$.out" file="bcs_reweight_$.out.logsum.{}" />  
	</auto>
	<assignment name="seed" value="global:seed.in" />
      </test>
      <test identifier="driver" execute="false" ignores="seed">
	<assignment name="penaltyfxn_" constant="'arctan'" />
	<assignment name="reweight_" constant=".true." />
	<target name="hold_rms_" varfile="holdrms.out" />
	<target name="hold_err_" varfile="holderr.out" />
	<assignment name="hold_rms_" constant="0" allocate="nfits" />
	<assignment name="hold_err_" constant="0" allocate="nfits" />
      </test>

      <target name="js" compareto="js.out" varfile="js.out" />
      <target name="error_bars" compareto="ebars.out" varfile="ebars.out" />
      <target name="fit_rms" compareto="rms.out" varfile="rms.out" />
      <target name="fit_err" compareto="err.out" varfile="err.out" />
      
      <assignment name="nfits" constant="10" />
      <assignment name="nholdout_" constant="300" />
      <assignment name="fit_rms" constant="0" allocate="nfits" />
      <assignment name="fit_err" constant="0" allocate="nfits" />

      <assignment name="full_pi">
	<value file="bcs_pi.in.{}" rename="pi.in" />
      </assignment>
      <assignment name="y">
	<value file="bcs_y.in.{}" rename="y.in" />
      </assignment>
      <assignment name="js" constant="0" allocate="nfits, size(full_pi, 2)" />
      <assignment name="error_bars" constant="0" allocate="nfits, size(full_pi, 2)" />
      <assignment name="jcutoff_" constant="1e-3" />
    </group>
  </decorates>
</fortpy>
